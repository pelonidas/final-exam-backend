generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model place {
  id                String          @id(map: "place_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id           String?         @db.Uuid
  title             String?
  image             String?
  type              String?
  place_location_id String?         @db.Uuid
  place_location    place_location? @relation(fields: [place_location_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "place_place_location_id_fk")
  user              user?           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "place_user_id_fk")
}

model place_location {
  id                String  @id(map: "place_location_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  address           String?
  latitude          Float?
  longtitude        Float?
  place_location_id String? @db.Uuid
  place             place[]
}

model todo {
  id          String  @id(map: "todo_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String  @db.Uuid
  title       String?
  done        Boolean
  description String?
  priority    String?
  user        user    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "todo_user_id_fk")
}

model user {
  id       String  @id(map: "user_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email    String  @unique(map: "user__index")
  username String
  password String
  place    place[]
  todo     todo[]
}
